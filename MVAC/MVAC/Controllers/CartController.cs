using Stripe;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using MVAC.Models;

namespace MVAC.Controllers
{
    public class CartController : Controller
    {
      

        // GET: Cart/Create
        public ActionResult Create()
        {
            return View();
        }

        // POST: Cart/Create
        [HttpPost]
        public ActionResult Create(string stripeToken)
        {

            StripeConfiguration.ApiKey = "sk_test_ZHuoHFuPLXsblhqgFkuwmt6D00YAWLYs6i";

            // `source` is obtained with Stripe.js; see https://stripe.com/docs/payments/accept-a-payment-charges#web-create-token
            var options = new ChargeCreateOptions
            {
                Amount = 50000,
                Currency = "usd",
                Source = stripeToken,
                Description = "My First Test Charge (created for API docs)",
            };
            var service = new ChargeService();
           Charge charge= service.Create(options);

            var model = new StripeChargeViewModel();
            model.ChargeId = charge.Id;  

            return View("OrderStatus", model);
        }

        // GET: Cart/CreateYearly
        public ActionResult CreateYearly()
        {
            return View();
        }
        // POST: Cart/Create
        [HttpPost]
        public ActionResult CreateYearly(string stripeToken)
        {

            StripeConfiguration.ApiKey = "sk_test_ZHuoHFuPLXsblhqgFkuwmt6D00YAWLYs6i";

            // `source` is obtained with Stripe.js; see https://stripe.com/docs/payments/accept-a-payment-charges#web-create-token
            var options = new ChargeCreateOptions
            {
                Amount = 15000,
                Currency = "usd",
                Source = stripeToken,
                Description = "My First Test Charge (created for API docs)",
            };
            var service = new ChargeService();
            Charge charge = service.Create(options);

            var model = new StripeChargeViewModel();
            model.ChargeId = charge.Id;

            return View("OrderStatus", model);
        }






        // GET: Cart/CreateYearly
        public ActionResult CreateYearlyandRegister()
        {
            return View();
        }
        // POST: Cart/Create
        [HttpPost]
        public ActionResult CreateYearlyandRegister(string stripeToken)
        {

            StripeConfiguration.ApiKey = "sk_test_ZHuoHFuPLXsblhqgFkuwmt6D00YAWLYs6i";

            // `source` is obtained with Stripe.js; see https://stripe.com/docs/payments/accept-a-payment-charges#web-create-token
            var options = new ChargeCreateOptions
            {
                Amount = 65000,
                Currency = "usd",
                Source = stripeToken,
                Description = "My First Test Charge (created for API docs)",
            };
            var service = new ChargeService();
            Charge charge = service.Create(options);

            var model = new StripeChargeViewModel();
            model.ChargeId = charge.Id;

            return View("OrderStatus", model);
        }































        // Shows Token generated by payment
        public ActionResult OrderStatus()
        {
            return View();
        }



    }
}
